- name: Create minecraft backups directory
  file:
    path: "{{ minecraft_dir }}/backups/"
    state: directory
    owner: "{{ minecraft_user }}"
    group: "{{ minecraft_user }}"
    mode: '755'

- name: Write minecraft server template files
  no_log: true
  become: yes
  become_user: "{{ minecraft_user }}"
  template:
    owner: "{{ minecraft_user }}"
    group: "{{ minecraft_user }}"
    # Note: this has to be a string, not an int!!
    mode: '660'
    src: "{{ item.src }}"
    dest: "{{ minecraft_dir }}/{{ item.path }}"
  with_community.general.filetree: templates/server/

- name: Add minecraft script x permissions
  file:
    path: "{{ minecraft_dir }}/{{ item }}"
    mode: a+x
  loop:
    - start.sh
    - stop.sh
    - backup.sh

# ----- ----- ----- ----- -----

- name: Set SELinux permissions on minecraft scripts
  when: ansible_distribution == 'Fedora'
  community.general.sefcontext:
    target: "{{ minecraft_dir }}/{{ item }}"
    setype: bin_t
    state: present
  loop:
    - start.sh
    - stop.sh
    - backup.sh
  register: selinux

- name: Reload SELinux policy for minecraft scripts
  when:
    - ansible_distribution == 'Fedora'
    - selinux.changed
  command: "restorecon -irv {{ minecraft_dir }}/"
  register: reload_selinux
  changed_when: reload_selinux.rc != 0

# ----- ----- ----- ----- -----

- name: Write minecraft variables to files
  no_log: true
  copy:
    content: "{{ item.content }}"
    dest: "{{ minecraft_dir }}/{{ item.dest }}"
    owner: "{{ minecraft_user }}"
    group: "{{ minecraft_user }}"
    # Note: this has to be a string, not an int!!
    mode: '660'
  loop:
    - { dest: ".mcrcon.pass", content: "{{ mcrcon_pass }}" }
    - { dest: ".world.name", content: "{{ minecraft_world_name }}" }